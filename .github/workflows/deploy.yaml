name: deploy-app

on:
  push:
    branches:
      - master
      - test-ci-cd

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Environment variables substitute
          uses: danielr1996/envsubst-action@1.0.0
          env :
               service_account_key: ${{ secrets.GCP_SA_KEY }}
               firebase_account_key: ${{ secrets.GCP_FSA_KEY }}
          with:
            input : base.yaml
            output: app.yaml
            
        - name: Check substitute
          run: "cat app.yaml"
        - name: Set outputs
          id : vars
          run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

        - name: Check outputs
          run : echo ${{ steps.vars.outputs.sha_short }}

        - name: Install Cloud SDK
          uses: google-github-actions/setup-gcloud@master
          with:
            project_id           : ${{ secrets.GCP_PROJECT_ID }}
            service_account_email: ${{ secrets.GCP_EMAIL }}
            service_account_key  : ${{ secrets.GCP_SA_KEY }}

        - name: Deploy project to App Engine
          id  : deploy
          uses: google-github-actions/deploy-appengine@main
          with:
            deliverables: app.yaml
            project_id  : ${{ secrets.GCP_PROJECT_ID }}
            credentials : ${{ secrets.GCP_SA_KEY }}
            version     : ${{ steps.vars.outputs.sha_short }}

        - name: Test
          run : |
            http_code=$(curl -I --silent ${{ steps.deploy.outputs.url }} | head -n 1 | awk -F ' ' '{print $2}')
            if [ "$http_code" != "200" ]; then
                echo "Error occured, status=$http_code"
                exit 1
            else
                echo "Success deploy"
            fi
